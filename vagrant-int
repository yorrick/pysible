# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    config.vm.define "int" do |int|
        # Every Vagrant virtual environment requires a box to build off of.
        int.vm.box = "precise32"
        # int.vm.box = "centos7"

        # The url from where the 'int.vm.box' box will be fetched if it
        # doesn't already exist on the user's system.
        int.vm.box_url = "http://files.vagrantup.com/precise32.box"
        # int.vm.box_url = "https://f0fff3908f081cb6461b407be80daf97f07ac418.googledrive.com/host/0BwtuV7VyVTSkUG1PM3pCeDJ4dVE/centos7.box"

        int.vm.network "forwarded_port", guest: 5432, host: 5432
        int.vm.network "forwarded_port", guest: 8000, host: 8000
        int.vm.network :private_network, ip: "192.168.56.121"
        # int.ssh.forward_agent = true

        if ENV.has_key?('PYANSIBLE_APPS')
            apps = ENV['PYANSIBLE_APPS'].split(',').to_set
            apps.each do |host_app_path|
                app_name = host_app_path.split("/").last
                # int.vm.synced_folder host_app_path, "/srv/app/#{app_name}", :owner=> 'webapp', :group=>'webapp', :mount_options => ['dmode=777', 'fmode=777']
                int.vm.synced_folder host_app_path, "/srv/app/#{app_name}", :mount_options => ['dmode=777', 'fmode=777']
            end
        end

        # Provider-specific configuration so you can fine-tune various
        # backing providers for Vagrant. These expose provider-specific options.
        # Example for VirtualBox:
        #
        # int.vm.provider "virtualbox" do |vb|
        #   # Don't boot with headless mode
        #   vb.gui = true
        #
        #   # Use VBoxManage to customize the VM. For example to change memory:
        #   vb.customize ["modifyvm", :id, "--memory", "1024"]
        # end

        # set name of VM
        int.vm.provider "virtualbox" do |v|
          v.name = "django_async_integration"
        end

        int.vm.provision "ansible" do |ansible|
            ansible.playbook = "provision.yml"
            ansible.inventory_path = "inventories/integration_servers"
            ansible.limit = 'all'
            ansible.verbose = 'vvv'
        end

        # int.vm.hostname = "www.testing.de"
        int.hostsupdater.aliases = ["int.django-async.local"]
    end
end
