---

# TODO we could also write a module to do all steps for one app, and then go on for the second app and so on
#{"django-async.local":"dns","dir":"django_async","wsgi_module":"django_async.wsgi_app_prod","venv":"django_async_venv"}

- name: Create app dir
  file: dest={{ app_dir }}/{{ item.dns }} state=directory
  with_items:
    - "{{ deploy_apps }}"

- name: Symlink app clone directory
  file: src={{ app_clone }}/{{ item.clone_dir }} dest={{ app_dir }}/{{ item.dns }}/clone state=link
  with_items:
    - "{{ deploy_apps }}"

- name: Create virtualenvs for apps
  pip:
    virtualenv_command: "{{ python_dir }}/python{{ python_version }}/bin/virtualenv"
    virtualenv_site_packages: no
    virtualenv: "{{ venv_dir }}/{{ item.venv }}"
    requirements: "{{ app_dir }}/{{ item.dns }}/clone/{{ python_requirements }}"
  with_items:
    - "{{ deploy_apps }}"

- name: Create uwsgi config file
  template: src=uwsgi.ini dest={{ app_dir }}/{{ item.dns }}/uwsgi.ini
  register: uwsgi_config
  with_items:
    - "{{ deploy_apps }}"

- name: Create nginx config file
  template: src=nginx.conf dest={{ app_dir }}/{{ item.dns }}/nginx.conf
  with_items:
    - "{{ deploy_apps }}"

- name: Symlink uwsgi config file
  file: src={{ app_dir }}/{{ item.dns }}/uwsgi.ini dest=/etc/uwsgi/vassals/{{ item.dns }}.uwsgi.ini state=link
  with_items:
    - "{{ deploy_apps }}"

- name: Symlink nginx config file
  file: src={{ app_dir }}/{{ item.dns }}/nginx.conf dest=/etc/nginx/sites-enabled/{{ item.dns }}.nginx.conf state=link
  with_items:
    - "{{ deploy_apps }}"
  notify:
    - reload nginx

- name: Reload uwsgi master
  file: dest={{ app_dir }}/{{ item.dns }}/uwsgi.ini state=touch
  with_items:
    - "{{ deploy_apps }}"
  when: uwsgi_config.changed
